'use strict';

function real(entity) {
  return !!entity;
}
function burned({ burned: isBurned }) {
  return isBurned;
}
function created(entity) {
  return Object.keys(entity).length === 1 && entity.id !== void 0;
}
function remintable(entity) {
  return burned(entity) || created(entity);
}
function needTo(callback, entity, positive = true) {
  if (positive ? !callback(entity) : callback(entity)) {
    throw new ReferenceError(`[PROBLEM] Entity needs ${positive ? "" : "not"}to be ${callback.name}`);
  }
}
function plsBe(callback, entity) {
  return needTo(callback, entity, true);
}
function plsNotBe(callback, entity) {
  return needTo(callback, entity, false);
}

exports.burned = burned;
exports.created = created;
exports.needTo = needTo;
exports.plsBe = plsBe;
exports.plsNotBe = plsNotBe;
exports.real = real;
exports.remintable = remintable;
